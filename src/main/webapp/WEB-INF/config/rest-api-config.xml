<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as beans -->
 	<context:annotation-config />
    
 	<context:component-scan base-package="com.rectraxx.rest.api"/>
 	<context:component-scan base-package="com.rectraxx.api"/>
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
	</bean>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="iafDS" users-by-username-query="select username from users where username=? and password = ?"
			authorities-by-username-query="select username, role from user_roles where username = ?"/>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- Configures the JSP layout system (resolves view names returned by Controllers to JSP in certain situations) -->	
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
    
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="-1" />
 
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>
    
</beans>